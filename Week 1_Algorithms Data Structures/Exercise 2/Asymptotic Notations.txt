STEP 1: UNDERSTANDING ASYMPTOTIC NOTATION

1.Big O Notation:

-Definition: Big O notation describes the upper bound of an algorithm's runtime or space requirements in the worst-case scenario. It provides an asymptotic analysis of how the runtime grows relative to the input size.
-Purpose: It helps in comparing the efficiency of algorithms, especially when dealing with large inputs.

2.Search Operations:

2.1.Linear Search:

-Best Case: O(1) — Occurs when the target element is the first element in the array.
-Average Case: O(n) — Occurs when the target element is somewhere in the middle of the array.
-Worst Case: O(n) — Occurs when the target element is the last element or not present in the array.

2.2.Binary Search:

-Best Case: O(1) — Occurs when the target element is at the middle of the array.
-Average Case: O(log n) — Occurs for most cases where the array is divided in half with each comparison.
-Worst Case: O(log n) — Occurs when the search narrows down to a single element or the target is not found.